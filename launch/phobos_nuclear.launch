<?xml version="1.0"?>
<!--XML-->
<launch>
    <!-- SETUP ARGUMENTS -->
    <!-- enable/disable rviz -->
    <arg name="rviz" default="false" />
    <!-- enable/disable calibration -->
    <arg name="calibrate" default="false"/>
    <!-- is camera with split laser functionality being used -->
    <arg name="split_laser" default="false"/>
    <!-- enable/disbale stereo matching (3D generation) -->
    <arg name="stereo_match" default="true"/>
    <!-- 0=TIS, 1=Basler -->
    <arg name="camera_type" default="1"/>
    <!-- namespace for camera -->
    <arg name="camera_namespace" default="phobos_nuclear"/>

    <!-- Be sure to change this to your cameras id -->
    <!-- TIS -->
    <arg if="$(eval camera_type == 0)" name="camera_right_serial" default="31710277"/>
    <arg if="$(eval camera_type == 0)" name="camera_left_serial" default="31710260"/>
    <!-- Basler -->
    <arg if="$(eval camera_type == 1)" name="camera_right_serial" default="phobos_nuclear_r"/>
    <arg if="$(eval camera_type == 1)" name="camera_left_serial" default="phobos_nuclear_l"/>
    
    <!-- this should not change as it is the namespace of frames in the urdf-->
    <arg name="camera_model" default="$(arg camera_namespace)"/>

    <!-- SETUP ROBOT MODEL -->
    <param name="$(arg camera_model)_robot_description" command="$(find xacro)/xacro '$(find i3dr_phobos_nuclear)/urdf/phobos_nuclear_scene.urdf.xacro'" />
    <node name="robot_state_publisher_phobos_nuclear" pkg="robot_state_publisher" type="state_publisher">
        <remap from="robot_description" to="$(arg camera_model)_robot_description"/>
    </node>
    
    <!-- STEREO CAPTURE -->
    <include file="$(find i3dr_stereo_camera)/launch/stereo_capture.launch">
        <!-- camera startup settings -->
        <arg name="exposure" value="40000"/>
        <arg name="gain" value="0"/>
        <arg name="fps" value="1"/>
        <!-- camera calibration files-->
        <arg name="camera_info_right" value="file://$(find i3dr_phobos_nuclear)/calibration/24-01-2020/phobos_nuclear_right.yaml" />
        <arg name="camera_info_left" value="file://$(find i3dr_phobos_nuclear)/calibration/24-01-2020/phobos_nuclear_left.yaml" />
        <!-- frame id -->
        <arg name="frame_id" value="$(arg camera_model)_depth_optical_frame" />

        <!-- 0=TIS, 1=Basler -->
        <arg name="camera_type" value="$(arg camera_type)"/>
        <arg name="binning" value="1"/>

        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="camera_right_serial" value="$(arg camera_right_serial)"/>
        <arg name="camera_left_serial" value="$(arg camera_left_serial)"/>
        <arg name="split_laser" value="$(arg split_laser)"/>
    </include>

    <!-- STEREO CALIBRATION -->
    <include if="$(arg calibrate)" file="$(find i3dr_stereo_camera)/launch/stereo_calibration.launch">
        <arg name="split_laser" value="$(arg split_laser)"/>
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="multi_board" value="true" />
        <arg name="grid_rows" value="8" />
    </include>

    <!-- STEREO MATCHER -->
    <include if="$(arg stereo_match)" file="$(find i3dr_stereo_camera)/launch/stereo_matcher.launch">
        <arg name="use_i3dr_matcher" value="true"/>

        <!-- Matcher Parameters -->
        <!-- see link below for details on matcher parameters -->
        <!-- http://wiki.ros.org/stereo_image_proc/Tutorials/ChoosingGoodStereoParameters -->
        <!-- algorithm 0: OpenCV block -->
        <!-- algorithm 1: OpenCV SGBM -->
        <!-- algorithm 2: JR SGM -->
        <arg name="stereo_algorithm" value="0" />

        <!-- maximum depth value (m) -->
        <!-- reduce this if RTabMap is showing flat image in back of 3D -->
        <arg name="depth_max" default="6" />

        <arg name="gui" value="false"/>
        <arg name="split_laser" value="$(arg split_laser)"/>
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="frame_id" value="$(arg camera_model)_depth_optical_frame" />
    </include>

    <!-- DISPLAY -->
    <!-- run rviz with config file -->
    <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rivz" 
        args="-d $(find i3dr_phobos_nuclear)/rviz/scene.rviz"/>

</launch>
